@using FenixAlliance.ABM.Data.Clients.OpenCurrencyExchange


@{
    var IP = Context.Connection.RemoteIpAddress.ToString();
}

<!DOCTYPE html>
<html view-source="no" viewsource="no" xmlns="//www.w3.org/1999/xhtml" xmlns:b="//www.google.com/2005/gml/b" xmlns:data="//www.google.com/2005/gml/data" xmlns:expr="//www.google.com/2005/gml/expr" prefix="og: http://ogp.me/ns">
<head>
    <base href="~/" />

    @await Html.PartialAsync("_MetaTagsPartial")
    @await Html.PartialAsync("_PortalHeadPartial")
    <script src="https://kit.fontawesome.com/e9164c5e00.js" crossorigin="anonymous"></script>

    <style>
        .form-group.with-icon i, .form-group.with-icon svg {
            left: 0;
            top: 20%;
            width: 50px;
            display: block;
            position: absolute;
            text-align: center;
            line-height: 3.5rem;
            margin-top: -10px;
            font-size: 20px;
        }
    </style>
</head>

<body>
    <!-- Google Tag Manager (noscript) -->
    <noscript>
        <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NMFRWG7"
                height="0" width="0" style="display:none;visibility:hidden"></iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->

    @if (services.Any(s => s.ServiceType == typeof(OpenExchangeRatesClient)))
    {
       @* Forex Rates *@
        @if (ViewBag.DisableForex != true)
        {
            @await Component.InvokeAsync("ForexRates", new { CurrentUser = User, CurrentUserIP = IP })
        }
    }

    @await Component.InvokeAsync("InitPortalLayout", User)

    @if (ViewBag.DisableContainer != true)
    {
        <div class="container">
            <div class="row">
                <div class="col col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                    <div class="ui-block" style="padding:2rem">
                        @RenderBody()
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        @RenderBody()
    }

    @*@await Html.PartialAsync("_PortalFooterPartial")*@

    @await Component.InvokeAsync("WebCommons")

    <!-- Scripts - Complements -->
    @await Html.PartialAsync("_PortalScriptsPartial")
    
    @RenderSection("scripts", required: false)

</body>
</html>